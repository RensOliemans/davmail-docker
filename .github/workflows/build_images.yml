---
name: 'build images'

on:
  push:
    branches:
      - master
    tags:
      - '*.*.*'
  schedule:
    - cron: '15 5 * * sun,tue,thu,sat'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/${GITHUB_REPOSITORY#*/}
          VERSION=latest

          # If this is git tag, use the tag name as a docker tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          TEST_TAG="${TAGS}"

          # If the VERSION looks like a version number, assume that
          # this is the most recent version of the image and also
          # tag it 'latest'.
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi

          # If event type schedule, then force build the trunk HEAD
          if [[ $GITHUB_EVENT_NAME == 'schedule' ]]; then
            TAGS="${DOCKER_IMAGE}:trunk"
            TEST_TAG="${TAGS}"
            BUILD_ARGS="DAVMAIL_REV=HEAD"
          fi

          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=test_tag::${TEST_TAG}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=build_args::${BUILD_ARGS}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm64/v8
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          build-args: ${{ steps.prep.outputs.build_args }}

      - name: Test default arch
        env:
          COMPOSE_FILE: ./tests/compose-sut.yaml
          IMAGE_NAME: ${{ steps.prep.outputs.test_tag }}
        run: |
         set -e
         docker-compose up sut
         docker-compose down
